(quote ((cond (macro (raw-list)
                        (let ((inner-cond (macro (cond-list-sym)
                                                 (let ((cond-list (eval cond-list-sym)))
                                                    (let ((first-cond (first cond-list))
                                                          (rest-cond (rest cond-list)))
                                                          (let ((first-pred (first first-cond))
                                                                (first-result (first (rest first-cond))))
                                                                (if (eval first-pred)
                                                                    first-result
                                                                    (if (nil? rest-cond)
                                                                        ()
                                                                        (inner-cond rest-cond))))))))
                              (list-sym raw-list))
                              (inner-cond list-sym))))))
